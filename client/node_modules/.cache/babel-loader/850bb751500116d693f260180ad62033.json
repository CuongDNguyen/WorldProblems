{"ast":null,"code":"var _jsxFileName = \"/Users/cdnphantom/projects/2019/worldproblems/client/src/components/Problem.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllProblems } from '../actions/index';\n\nclass Problem extends Component {\n  componentDidMount() {// this.props.getAllProblems();\n  }\n\n  getProblems() {\n    this.props.getAllProblems();\n    const posts = this.props.posts;\n    console.log('posts: ', posts);\n  }\n\n  render() {\n    const posts = this.props.posts;\n\n    if (posts.length) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, posts.map(postData => {\n        postData.data.map(post => {\n          return React.createElement(\"li\", {\n            key: post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, post.title), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, post.description));\n        });\n      })));\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getAllProblems\n})(Problem);","map":{"version":3,"sources":["/Users/cdnphantom/projects/2019/worldproblems/client/src/components/Problem.js"],"names":["React","Component","Fragment","connect","getAllProblems","Problem","componentDidMount","getProblems","props","posts","console","log","render","length","map","postData","data","post","id","title","description","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAE5BK,EAAAA,iBAAiB,GAAG,CAChB;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACT,SAAKC,KAAL,CAAWJ,cAAX;AACA,UAAMK,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACJ;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAMH,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AAEA,QAAIA,KAAK,CAACI,MAAV,EAAkB;AACd,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AACH,KAFD,MAEO;AACP,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIJ,KAAK,CAACK,GAAN,CAAUC,QAAQ,IAAI;AAClBA,QAAAA,QAAQ,CAACC,IAAT,CAAcF,GAAd,CAAkBG,IAAI,IAAI;AACvB,iBAAO;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKD,IAAI,CAACE,KAAV,CADE,EAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIF,IAAI,CAACG,WAAT,CAFE,CAAP;AAIF,SALD;AAMH,OAPD,CAFJ,CADJ,CADJ;AAgBH;AAAC;;AAjC0B;;AAoChC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHb,IAAAA,KAAK,EAAEa,KAAK,CAACb;AADV,GAAP;AAGH;;AACD,eAAeN,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllProblems } from '../actions/index';\n\nclass Problem extends Component {\n\n    componentDidMount() {\n        // this.props.getAllProblems();\n    }\n\n    getProblems() {\n         this.props.getAllProblems();\n         const posts = this.props.posts;\n         console.log('posts: ', posts)\n    }\n    render() {\n        const posts = this.props.posts;\n\n        if (posts.length) {\n            return (<h1>Loading...</h1>)\n        } else {\n        return (\n            <Fragment>\n                <ul>\n                {\n                    posts.map(postData => {\n                        postData.data.map(post => {\n                           return <li key={post.id}>\n                                <h4>{post.title}</h4>\n                                <p>{post.description}</p>\n                            </li>\n                        })\n                    })\n                }\n                </ul>\n            </Fragment>\n        )\n    }}\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts\n    }\n}\nexport default connect(mapStateToProps, { getAllProblems })(Problem);"]},"metadata":{},"sourceType":"module"}