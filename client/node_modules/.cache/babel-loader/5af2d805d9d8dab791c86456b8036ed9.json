{"ast":null,"code":"var _jsxFileName = \"/Users/cdnphantom/projects/2019/worldproblems/client/src/components/Problem.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getAllProblems } from '../actions/index';\n\nclass Problem extends Component {\n  componentDidMount() {\n    this.props.getAllProblems();\n  }\n\n  render() {\n    const posts = this.props.posts;\n\n    for (let index = 0; index < posts.length; index++) {\n      posts[index].data.map(post => console.log('description: ', post.description));\n    } // posts.data.map(post => {\n    //     console.log('title: ', post.title)\n    //     console.log('description: ', posts.description);\n    // })\n\n\n    return (// <Paper component=\"div\">\n      //     <Typography component=\"h3\">\n      //         {this.props.problemTitle}\n      //     </Typography>\n      React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, posts.forEach(item => {\n        item.data.map(post => {\n          console.log('post: ', post);\n          return React.createElement(Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            key: post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, post.title), React.createElement(\"div\", {\n            key: post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, post.description));\n        });\n      }))\n    );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getAllProblems\n})(Problem);","map":{"version":3,"sources":["/Users/cdnphantom/projects/2019/worldproblems/client/src/components/Problem.js"],"names":["React","Component","Fragment","Paper","Typography","connect","getAllProblems","Problem","componentDidMount","props","render","posts","index","length","data","map","post","console","log","description","forEach","item","id","title","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,mBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAE5BO,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWH,cAAX;AACH;;AACDI,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,KAAK,CAACE,MAAlC,EAA0CD,KAAK,EAA/C,EAAmD;AAC/CD,MAAAA,KAAK,CAACC,KAAD,CAAL,CAAaE,IAAb,CAAkBC,GAAlB,CAAsBC,IAAI,IACtBC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAAI,CAACG,WAAlC,CADJ;AAIH,KAPI,CAQL;AACA;AACA;AACA;;;AACA,WACI;AACA;AACA;AACA;AACA,0BAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQR,KAAK,CAACS,OAAN,CAAcC,IAAI,IAAI;AAClBA,QAAAA,IAAI,CAACP,IAAL,CAAUC,GAAV,CAAcC,IAAI,IAAI;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACA,iBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACH;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBN,IAAI,CAACO,KAAzB,CADG,EAEH;AAAK,YAAA,GAAG,EAAEP,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBN,IAAI,CAACG,WAAzB,CAFG,CAAP;AAIH,SAND;AAOH,OARD,CAFR;AALJ;AAmBH;;AApC2B;;AAuChC,SAASK,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHd,IAAAA,KAAK,EAAEc,KAAK,CAACd;AADV,GAAP;AAGH;;AACD,eAAeN,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,OAA7C,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Paper, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getAllProblems } from '../actions/index';\n\nclass Problem extends Component {\n\n    componentDidMount() {\n        this.props.getAllProblems();\n    }\n    render() {\n        const posts = this.props.posts;\n        for (let index = 0; index < posts.length; index++) {\n            posts[index].data.map(post => (\n                console.log('description: ', post.description)\n            ))\n\n        }\n        // posts.data.map(post => {\n        //     console.log('title: ', post.title)\n        //     console.log('description: ', posts.description);\n        // })\n        return (\n            // <Paper component=\"div\">\n            //     <Typography component=\"h3\">\n            //         {this.props.problemTitle}\n            //     </Typography>\n            <Fragment>\n                {\n                    posts.forEach(item => {\n                        item.data.map(post => {\n                            console.log('post: ', post)\n                            return <Fragment>\n                                <div key={post.id}>{post.title}</div>\n                                <div key={post.id}>{post.description}</div>\n                            </Fragment>\n                        })\n                    })\n                }\n            </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts\n    }\n}\nexport default connect(mapStateToProps, { getAllProblems })(Problem);"]},"metadata":{},"sourceType":"module"}