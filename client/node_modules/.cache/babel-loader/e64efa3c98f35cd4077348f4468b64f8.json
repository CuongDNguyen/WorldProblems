{"ast":null,"code":"var _jsxFileName = \"/Users/cdnphantom/projects/2019/worldproblems/client/src/components/PostProblem.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { addPost } from '../actions/index';\nimport { Button, TextField, Input, Grid } from '@material-ui/core';\nimport API from '../utils/API';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addPost: post => dispatch(addPost(post))\n  };\n}\n\nclass PostProblem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      description: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleClick() {\n    const problemTitle = document.querySelector(\"#problemTitle\").value || \"No title provided\";\n    const problemDescription = document.querySelector(\"#problemDescription\").value || \"No description provided\";\n    this.setState({\n      title: problemTitle,\n      description: problemDescription\n    }, () => {\n      console.log(\"state: \", this.state);\n    });\n    API.createNewProblem(\"Cuong\", problemTitle, problemDescription).then(res => {\n      console.log(\"Response: \", res);\n    }).catch();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addPost(this.state.title);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      placeholder: \"Problem title\",\n      id: \"problemTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fullWidth: true,\n      id: \"problemDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"small\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Post\"))), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"New Redux Form Test\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Save Post\")));\n  }\n\n}\n\nconst ConnectedPostProblem = connect(null, mapDispatchToProps)(PostProblem);\nexport default ConnectedPostProblem;","map":{"version":3,"sources":["/Users/cdnphantom/projects/2019/worldproblems/client/src/components/PostProblem.js"],"names":["React","Component","Fragment","connect","addPost","Button","TextField","Input","Grid","API","mapDispatchToProps","dispatch","post","PostProblem","constructor","props","state","title","description","handleClick","bind","handleSubmit","problemTitle","document","querySelector","value","problemDescription","setState","console","log","createNewProblem","then","res","catch","event","preventDefault","render","ConnectedPostProblem"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { addPost } from '../actions/index';\nimport { Button, TextField, Input, Grid } from '@material-ui/core';\nimport API from '../utils/API';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addPost: post => dispatch(addPost(post))\n    }\n}\n\nclass PostProblem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            title: \"\",\n            description: \"\"\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClick() {\n        const problemTitle = document.querySelector(\"#problemTitle\").value || \"No title provided\";\n        const problemDescription = document.querySelector(\"#problemDescription\").value || \"No description provided\"\n        this.setState({\n            title: problemTitle,\n            description: problemDescription\n        }, () => {\n            console.log(\"state: \", this.state);\n        })\n        API.createNewProblem(\"Cuong\", problemTitle, problemDescription).then( (res) => {\n            console.log(\"Response: \", res)\n        }).catch();\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.addPost(this.state.title);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Grid container direction=\"column\">\n                    <Grid item xs={4}>\n                        <TextField placeholder=\"Problem title\" id=\"problemTitle\" />\n                    </Grid>\n                    <Grid item xs={4}>\n                    <Input fullWidth id=\"problemDescription\" />\n                    <Button size=\"small\" onClick={this.handleClick}>\n                        Post\n                    </Button>\n                    </Grid>\n                </Grid>\n\n                <h3>New Redux Form Test</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>Title</label>\n                        <input type=\"text\" id=\"title\" value={title}></input>\n                    </div>\n                    <button type=\"submit\">Save Post</button>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nconst ConnectedPostProblem = connect(null, mapDispatchToProps) (PostProblem)\n\nexport default ConnectedPostProblem;"]},"metadata":{},"sourceType":"module"}