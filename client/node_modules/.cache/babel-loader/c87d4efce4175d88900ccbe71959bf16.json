{"ast":null,"code":"import{POSTS_LOADED}from'./action_types';import axios from'axios';var timeout=5000;var localhost;var env=process.env.NODE_ENV||\"development\";if(env===\"development\"){localhost=\"http://localhost:8080\";}else{localhost=\"\";}var currentDate=new Date();// export function addPost(payload) {\n//     return { type: ADD_POST, payload }\n// }\nexport function getAllProblems(){return function(dispatch){var allProblemsUrl=\"\".concat(localhost,\"/api/problems\");return axios.get(allProblemsUrl,{timeout:timeout}).then(function(res){return dispatch({type:POSTS_LOADED,payload:res});});};}export function createNewProblem(author,title,description){var createProblemsUrl=\"\".concat(localhost,\"/api/problems\");return axios.post(createProblemsUrl,{author:author,title:title,description:description,createdAt:currentDate,updatedAt:currentDate});}","map":{"version":3,"sources":["/Users/cdnphantom/projects/2019/worldproblems/client/src/actions/index.js"],"names":["POSTS_LOADED","axios","timeout","localhost","env","process","NODE_ENV","currentDate","Date","getAllProblems","dispatch","allProblemsUrl","get","then","res","type","payload","createNewProblem","author","title","description","createProblemsUrl","post","createdAt","updatedAt"],"mappings":"AAAA,OAASA,YAAT,KAA6B,gBAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,IAAhB,CACA,GAAIC,CAAAA,SAAJ,CACA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,EAAwB,aAApC,CACA,GAAIF,GAAG,GAAK,aAAZ,CAA2B,CACvBD,SAAS,wBAAT,CACH,CAFD,IAEO,CACHA,SAAS,CAAG,EAAZ,CACH,CAED,GAAII,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAJ,EAAlB,CAEA;AACA;AACA;AAEA,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC7B,MAAO,UAAUC,QAAV,CAAoB,CACvB,GAAMC,CAAAA,cAAc,WAAMR,SAAN,iBAApB,CACA,MAAOF,CAAAA,KAAK,CAACW,GAAN,CAAUD,cAAV,CAA0B,CAC7BT,OAAO,CAAEA,OADoB,CAA1B,EAEJW,IAFI,CAEC,SAAAC,GAAG,QAAIJ,CAAAA,QAAQ,CAAC,CAAEK,IAAI,CAAEf,YAAR,CAAsBgB,OAAO,CAAEF,GAA/B,CAAD,CAAZ,EAFJ,CAAP,CAGH,CALD,CAMH,CAED,MAAO,SAASG,CAAAA,gBAAT,CAA0BC,MAA1B,CAAkCC,KAAlC,CAAyCC,WAAzC,CAAsD,CACzD,GAAMC,CAAAA,iBAAiB,WAAMlB,SAAN,iBAAvB,CACA,MAAOF,CAAAA,KAAK,CAACqB,IAAN,CAAWD,iBAAX,CAA8B,CACjCH,MAAM,CAAEA,MADyB,CAEjCC,KAAK,CAAEA,KAF0B,CAGjCC,WAAW,CAAEA,WAHoB,CAIjCG,SAAS,CAAEhB,WAJsB,CAKjCiB,SAAS,CAAEjB,WALsB,CAA9B,CAAP,CAOH","sourcesContent":["import { POSTS_LOADED } from './action_types';\nimport axios from 'axios';\nconst timeout = 5000;\nlet localhost;\nconst env = process.env.NODE_ENV || \"development\";\nif (env === \"development\") {\n    localhost = `http://localhost:8080`;\n} else {\n    localhost = \"\";\n}\n\nlet currentDate = new Date();\n\n// export function addPost(payload) {\n//     return { type: ADD_POST, payload }\n// }\n\nexport function getAllProblems() {\n    return function (dispatch) {\n        const allProblemsUrl = `${localhost}/api/problems`;\n        return axios.get(allProblemsUrl, {\n            timeout: timeout\n        }).then(res => dispatch({ type: POSTS_LOADED, payload: res }))\n    }\n}\n\nexport function createNewProblem(author, title, description) {\n    const createProblemsUrl = `${localhost}/api/problems`;\n    return axios.post(createProblemsUrl, {\n        author: author,\n        title: title,\n        description: description,\n        createdAt: currentDate,\n        updatedAt: currentDate\n    })\n}"]},"metadata":{},"sourceType":"module"}