{"ast":null,"code":"import _classCallCheck from\"/Users/cdnphantom/projects/2019/worldproblems/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cdnphantom/projects/2019/worldproblems/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/cdnphantom/projects/2019/worldproblems/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/cdnphantom/projects/2019/worldproblems/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/cdnphantom/projects/2019/worldproblems/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/cdnphantom/projects/2019/worldproblems/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component,Fragment}from'react';import{connect}from'react-redux';import{addPost as _addPost}from'../actions/index';import{Button,TextField,Input,Grid}from'@material-ui/core';import API from'../utils/API';function mapDispatchToProps(dispatch){return{addPost:function addPost(post){return dispatch(_addPost(post));}};}var PostProblem=/*#__PURE__*/function(_Component){_inherits(PostProblem,_Component);function PostProblem(props){var _this;_classCallCheck(this,PostProblem);_this=_possibleConstructorReturn(this,_getPrototypeOf(PostProblem).call(this,props));_this.state={title:\"\",description:\"\"};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(PostProblem,[{key:\"handleClick\",value:function handleClick(){var _this2=this;var problemTitle=document.querySelector(\"#problemTitle\").value||\"No title provided\";var problemDescription=document.querySelector(\"#problemDescription\").value||\"No description provided\";this.setState({title:problemTitle,description:problemDescription},function(){console.log(\"state: \",_this2.state);});API.createNewProblem(\"Cuong\",problemTitle,problemDescription).then(function(res){console.log(\"Response: \",res);}).catch();}},{key:\"handleSubmit\",value:function handleSubmit(event){var title=document.querySelector(\"#title\").value||\"No title provided\";var description=document.querySelector(\"#description\").value||\"No description provided\";event.preventDefault();this.props.addPost({title:title,description:description});}},{key:\"render\",value:function render(){return React.createElement(Fragment,null,React.createElement(Grid,{container:true,direction:\"column\"},React.createElement(Grid,{item:true,xs:4},React.createElement(TextField,{placeholder:\"Problem title\",id:\"problemTitle\"})),React.createElement(Grid,{item:true,xs:4},React.createElement(Input,{fullWidth:true,id:\"problemDescription\"}),React.createElement(Button,{size:\"small\",onClick:this.handleClick},\"Post\"))),React.createElement(\"h3\",null,\"New Redux Form Test\"),React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"div\",null,React.createElement(\"label\",null,\"Title\"),React.createElement(\"input\",{type:\"text\",id:\"title\",placeholder:\"Post title\"}),React.createElement(\"label\",null,\"Description\"),React.createElement(\"input\",{type:\"text\",id:\"description\",placeholder:\"Post description\"})),React.createElement(\"button\",{type:\"submit\"},\"Save Post\")));}}]);return PostProblem;}(Component);var ConnectedPostProblem=connect(null,mapDispatchToProps)(PostProblem);export default ConnectedPostProblem;","map":{"version":3,"sources":["/Users/cdnphantom/projects/2019/worldproblems/client/src/components/PostProblem.js"],"names":["React","Component","Fragment","connect","addPost","Button","TextField","Input","Grid","API","mapDispatchToProps","dispatch","post","PostProblem","props","state","title","description","handleClick","bind","handleSubmit","problemTitle","document","querySelector","value","problemDescription","setState","console","log","createNewProblem","then","res","catch","event","preventDefault","ConnectedPostProblem"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { addPost } from '../actions/index';\nimport { Button, TextField, Input, Grid } from '@material-ui/core';\nimport API from '../utils/API';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addPost: post => dispatch(addPost(post))\n    }\n}\n\nclass PostProblem extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            title: \"\",\n            description: \"\"\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClick() {\n        const problemTitle = document.querySelector(\"#problemTitle\").value || \"No title provided\";\n        const problemDescription = document.querySelector(\"#problemDescription\").value || \"No description provided\"\n        this.setState({\n            title: problemTitle,\n            description: problemDescription\n        }, () => {\n            console.log(\"state: \", this.state);\n        })\n        API.createNewProblem(\"Cuong\", problemTitle, problemDescription).then( (res) => {\n            console.log(\"Response: \", res)\n        }).catch();\n    }\n\n    handleSubmit(event) {\n        const title = document.querySelector(\"#title\").value || \"No title provided\";\n        const description = document.querySelector(\"#description\").value || \"No description provided\";\n        event.preventDefault();\n        this.props.addPost({ title: title, description: description });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Grid container direction=\"column\">\n                    <Grid item xs={4}>\n                        <TextField placeholder=\"Problem title\" id=\"problemTitle\" />\n                    </Grid>\n                    <Grid item xs={4}>\n                    <Input fullWidth id=\"problemDescription\" />\n                    <Button size=\"small\" onClick={this.handleClick}>\n                        Post\n                    </Button>\n                    </Grid>\n                </Grid>\n\n                <h3>New Redux Form Test</h3>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label>Title</label>\n                        <input type=\"text\" id=\"title\" placeholder=\"Post title\"></input>\n                        <label>Description</label>\n                        <input type=\"text\" id=\"description\" placeholder=\"Post description\"></input>\n                    </div>\n                    <button type=\"submit\">Save Post</button>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nconst ConnectedPostProblem = connect(null, mapDispatchToProps) (PostProblem)\n\nexport default ConnectedPostProblem;"]},"metadata":{},"sourceType":"module"}