{"ast":null,"code":"import { ADD_POST, FORBIDDEN_WORDS } from '../actions/action_types';\nconst forbiddenWords = [\"middleware\"];\nexport function forbiddenWordsMiddleware({\n  dispatch\n}) {\n  return function (next) {\n    return function (action) {\n      if (action.type === ADD_POST) {\n        const foundWord = forbiddenWords.filter(word => action.payload.title.includes(word));\n        console.log('Forbidden Word: ', foundWord);\n\n        if (foundWord.length) {\n          return dispatch({\n            type: FORBIDDEN_WORDS\n          });\n        }\n      }\n\n      return next(action);\n    };\n  };\n}","map":{"version":3,"sources":["/Users/cdnphantom/projects/2019/worldproblems/client/src/middleware/index.js"],"names":["ADD_POST","FORBIDDEN_WORDS","forbiddenWords","forbiddenWordsMiddleware","dispatch","next","action","type","foundWord","filter","word","payload","title","includes","console","log","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,yBAA1C;AAEA,MAAMC,cAAc,GAAG,CAAC,YAAD,CAAvB;AAEA,OAAO,SAASC,wBAAT,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAAgD;AACnD,SAAO,UAAUC,IAAV,EAAgB;AACnB,WAAO,UAAUC,MAAV,EAAkB;AACrB,UAAIA,MAAM,CAACC,IAAP,KAAgBP,QAApB,EAA8B;AAC1B,cAAMQ,SAAS,GAAGN,cAAc,CAACO,MAAf,CAAsBC,IAAI,IACxCJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqBC,QAArB,CAA8BH,IAA9B,CADc,CAAlB;AAIAI,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,SAAhC;;AAEA,YAAIA,SAAS,CAACQ,MAAd,EAAsB;AAClB,iBAAOZ,QAAQ,CAAC;AAAEG,YAAAA,IAAI,EAAEN;AAAR,WAAD,CAAf;AACH;AACJ;;AACD,aAAOI,IAAI,CAACC,MAAD,CAAX;AACH,KAbD;AAcH,GAfD;AAgBH","sourcesContent":["import { ADD_POST, FORBIDDEN_WORDS } from '../actions/action_types';\n\nconst forbiddenWords = [\"middleware\"];\n\nexport function forbiddenWordsMiddleware({ dispatch }) {\n    return function (next) {\n        return function (action) {\n            if (action.type === ADD_POST) {\n                const foundWord = forbiddenWords.filter(word =>\n                    action.payload.title.includes(word)\n                );\n\n                console.log('Forbidden Word: ', foundWord)\n\n                if (foundWord.length) {\n                    return dispatch({ type: FORBIDDEN_WORDS })\n                }\n            }\n            return next(action);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}