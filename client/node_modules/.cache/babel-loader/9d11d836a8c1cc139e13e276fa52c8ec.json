{"ast":null,"code":"import { POSTS_LOADED } from './action_types';\nimport axios from 'axios';\nconst timeout = 5000;\nlet localhost;\nconst env = process.env.NODE_ENV || \"development\";\n\nif (env === \"development\") {\n  localhost = \"http://localhost:8080\";\n} else {\n  localhost = \"\";\n}\n\nlet currentDate = new Date();\nexport function addPost(payload) {\n  return {\n    type: ADD_POST,\n    payload\n  };\n}\nexport function getAllProblems() {\n  return function (dispatch) {\n    const allProblemsUrl = \"\".concat(localhost, \"/api/problems\");\n    return axios.get(allProblemsUrl, {\n      timeout: timeout\n    }).then(res => dispatch({\n      type: POSTS_LOADED,\n      payload: res\n    }));\n  };\n}\nexport function createNewProblem(author, title, description) {\n  const createProblemsUrl = \"\".concat(localhost, \"/api/problems\");\n  return axios.post(createProblemsUrl, {\n    author: author,\n    title: title,\n    description: description,\n    createdAt: currentDate,\n    updatedAt: currentDate\n  });\n}","map":{"version":3,"sources":["/Users/cdnphantom/projects/2019/worldproblems/client/src/actions/index.js"],"names":["POSTS_LOADED","axios","timeout","localhost","env","process","NODE_ENV","currentDate","Date","addPost","payload","type","ADD_POST","getAllProblems","dispatch","allProblemsUrl","get","then","res","createNewProblem","author","title","description","createProblemsUrl","post","createdAt","updatedAt"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,IAAhB;AACA,IAAIC,SAAJ;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAIF,GAAG,KAAK,aAAZ,EAA2B;AACvBD,EAAAA,SAAS,0BAAT;AACH,CAFD,MAEO;AACHA,EAAAA,SAAS,GAAG,EAAZ;AACH;;AAED,IAAII,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AAEA,OAAO,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AAC7B,SAAO;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBF,IAAAA;AAAlB,GAAP;AACH;AAED,OAAO,SAASG,cAAT,GAA0B;AAC7B,SAAO,UAAUC,QAAV,EAAoB;AACvB,UAAMC,cAAc,aAAMZ,SAAN,kBAApB;AACA,WAAOF,KAAK,CAACe,GAAN,CAAUD,cAAV,EAA0B;AAC7Bb,MAAAA,OAAO,EAAEA;AADoB,KAA1B,EAEJe,IAFI,CAECC,GAAG,IAAIJ,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEX,YAAR;AAAsBU,MAAAA,OAAO,EAAEQ;AAA/B,KAAD,CAFhB,CAAP;AAGH,GALD;AAMH;AAED,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,WAAzC,EAAsD;AACzD,QAAMC,iBAAiB,aAAMpB,SAAN,kBAAvB;AACA,SAAOF,KAAK,CAACuB,IAAN,CAAWD,iBAAX,EAA8B;AACjCH,IAAAA,MAAM,EAAEA,MADyB;AAEjCC,IAAAA,KAAK,EAAEA,KAF0B;AAGjCC,IAAAA,WAAW,EAAEA,WAHoB;AAIjCG,IAAAA,SAAS,EAAElB,WAJsB;AAKjCmB,IAAAA,SAAS,EAAEnB;AALsB,GAA9B,CAAP;AAOH","sourcesContent":["import { POSTS_LOADED } from './action_types';\nimport axios from 'axios';\nconst timeout = 5000;\nlet localhost;\nconst env = process.env.NODE_ENV || \"development\";\nif (env === \"development\") {\n    localhost = `http://localhost:8080`;\n} else {\n    localhost = \"\";\n}\n\nlet currentDate = new Date();\n\nexport function addPost(payload) {\n    return { type: ADD_POST, payload }\n}\n\nexport function getAllProblems() {\n    return function (dispatch) {\n        const allProblemsUrl = `${localhost}/api/problems`;\n        return axios.get(allProblemsUrl, {\n            timeout: timeout\n        }).then(res => dispatch({ type: POSTS_LOADED, payload: res }))\n    }\n}\n\nexport function createNewProblem(author, title, description) {\n    const createProblemsUrl = `${localhost}/api/problems`;\n    return axios.post(createProblemsUrl, {\n        author: author,\n        title: title,\n        description: description,\n        createdAt: currentDate,\n        updatedAt: currentDate\n    })\n}"]},"metadata":{},"sourceType":"module"}